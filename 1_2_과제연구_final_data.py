# -*- coding: utf-8 -*-
"""1-2 과제연구_final_data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_Ob2Bz7npylXLnDVDhwFRErcsZe2m-ep
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import random

# Google Drive에 마운트된 경로 지정
drive_path = "/content/drive/My Drive"
folder_name = "1-2 과제연구 염기서열 데이터"  # a 폴더 이름

data_length = 10000  # 10^3 = 1,000개의 염기서열 생성
number = 1
file_name = f"{data_length}_{number}.txt"  # b 파일 이름

# 폴더 경로 만들기
output_dir = os.path.join(drive_path, folder_name)
os.makedirs(output_dir, exist_ok=True)  # 폴더가 없으면 생성

# 파일 경로 생성
output_file = os.path.join(output_dir, file_name)

# 염기서열 생성 및 저장 설정
li = ['A', 'T', 'G', 'C']
sequence_length = data_length  # 전체 염기서열 길이 (예: 1,000)
chunk_size = 100  # 한 번에 생성하고 저장할 염기서열 수 (예: 100)

# 염기서열 생성 및 파일 저장
print(f"염기서열 생성 및 저장을 시작합니다. 저장 경로: {output_file}")

total_written = 0  # 현재까지 저장된 염기 개수

with open(output_file, "w") as file:
    for _ in range(sequence_length // chunk_size):
        # 청크 단위로 염기 생성
        chunk = ''.join(random.choice(li) for _ in range(chunk_size))
        file.write(chunk)  # 청크 저장
        total_written += chunk_size  # 저장된 염기 개수 업데이트
        print(f"현재까지 저장된 염기 개수: {total_written}/{sequence_length}", end="\r")  # 진행 상태 표시

# 최종 상태 출력
print(f"\n염기서열 {sequence_length}개가 Google Drive의 {output_file}에 저장되었습니다.")

import os

# Google Drive에 마운트된 경로 지정
drive_path = "/content/drive/My Drive"
folder_name = "1-2 과제연구 염기서열 데이터"  # a 폴더 이름
input_file_name = "10^8_5.txt"  # b 파일 이름 (10^8개의 염기서열이 들어 있는 파일)
output_file_name = "10^9_5.txt"  # 새로 생성할 파일 이름 (10^10개의 염기서열 저장)

# 파일 경로 설정
input_file_path = os.path.join(drive_path, folder_name, input_file_name)
output_file_path = os.path.join(drive_path, folder_name, output_file_name)

# 염기서열을 읽고 100번 반복하여 저장
repeat_count = 10  # 100번 반복

# 파일 읽기 및 쓰기
print(f"입력 파일: {input_file_path}")
print(f"출력 파일: {output_file_path}")

with open(input_file_path, "r") as input_file:
    dna_sequence = input_file.read().strip()  # 입력 파일의 염기서열 읽기 (공백 제거)

with open(output_file_path, "w") as output_file:
    for i in range(repeat_count):
        output_file.write(dna_sequence)  # 염기서열 이어 붙이기
        print(f"반복 {i+1}/{repeat_count} 완료", end="\r")  # 진행 상태 표시

from bitarray import bitarray
import random

li = {'A': '00', 'T': '01', 'G': '10', 'C': '11'}

def encode_dna(sequence):
    ba = bitarray()
    for nucleotide in sequence:
        ba.extend(li[nucleotide])
    return ba

chunk_size = 10**6
total_length = 10**20
output_file = "compressed_dna_sequence.bin"

with open(output_file, "wb") as file:
    for _ in range(total_length // chunk_size):
        dna_chunk = ''.join(random.choices(list(li.keys()), k=chunk_size))
        encoded = encode_dna(dna_chunk)
        file.write(encoded.tobytes())

print(f"Compressed DNA sequence saved to {output_file}.")